name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Run Pipeline
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: SonarCloud - Cache packages
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud - Install scanner
      working-directory: ./src
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p ./.sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

    - name: SonarCloud - Begin analysis
      working-directory: ./src
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        ./.sonar/scanner/dotnet-sonarscanner begin /k:"rodolfo-brandao_music-library" /o:"rodolfo-brandao" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: .NET - Restore
      working-directory: ./src
      run: dotnet restore

    - name: .NET - Build
      working-directory: ./src
      run: dotnet build --no-restore

    - name: .NET - Test
      working-directory: ./src
      run: dotnet test --no-build --verbosity normal

    - name: SonarCloud - End analysis
      working-directory: ./src
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"